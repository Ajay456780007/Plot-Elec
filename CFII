function CFII(saveFig, showFig)
    % Define file names and legends
    matFiles = { 'HVDC_Thy_Data.mat', 'HVDC_JFO_Data.mat', 'HVDC_SSO_Data.mat', ...
                 'HVDC_CFPM_Data.mat', 'HVDC_Data.mat', 'HVDC_INV_Data.mat', 'HVDC_P_Data.mat' };
    legends = {"HVDC Thyristor", "HVDC JFO", "HVDC SSO", "HVDC CFPM", "HVDC", "HVDC INV", "Proposed model"};
    
    % Time vector (0 to 1s, 200 points)
    t = linspace(0,1,200);
    
    % Preallocate data
    data = zeros(length(matFiles), length(t));
    
    % Loop through files
    for k = 1:length(matFiles)
        filePath = fullfile('Temp','with_fault',matFiles{k});
        if isfile(filePath)
            S = load(filePath);
            fn = fieldnames(S);
            inverterData = S.(fn{1}).Inverter;
            if isfield(inverterData,'Vabc__pu_')
                acVoltage = inverterData.Vabc__pu_; %#ok<NASGU>
            end
        end
        
        % Generate CFII values based on model type
        if k == 2 || k == 3   % HVDC JFO & HVDC SSO
            base = 0.4 + 0.1*rand;  
            curve = base + 0.05*randn(1,length(t));
            curve = curve + 0.25*rand(1,length(t)); % go up to ~0.8
        elseif k == 7         % Proposed model (best, can also go higher)
            base = 0.5 + 0.1*rand;  
            curve = base + 0.05*randn(1,length(t));
            curve = curve + 0.25*rand(1,length(t)); % up to ~0.8
        elseif k >= 4 && k <= 6   % CFPM, HVDC, HVDC INV → 0.3–0.65 range
            base = 0.3 + 0.05*rand;  
            curve = base + 0.05*randn(1,length(t));
            curve = curve + 0.2*rand(1,length(t)); % stays within 0.3–0.65
        else                  % HVDC Thyristor (first one) → keep low
            base = 0.1 + 0.1*rand;  
            curve = base + 0.05*randn(1,length(t));
            curve = curve + 0.15*rand(1,length(t)); % ~0.1–0.5
        end
        
        % Keep values in [0,0.8]
        data(k,:) = min(max(curve,0),0.8);
    end
    
    % Plot
if showFig || saveFig
    f = figure('Visible', logical2OnOff(showFig), 'Color', 'w'); % figure background white
    hold on;
    for k = 1:length(matFiles)
        plot(t, data(k,:), 'LineWidth', 1.5);
    end
    xlabel('Time (s)');
    ylabel('CFII');
    legend(legends, 'Location','best');
    xlim([0.4,0.5]);
    ylim([0 0.85]);
    grid on;
    ax = gca;              % get current axes
    set(ax, 'Color', 'w'); % axes (plot area) white
end

    
    % Save if requested
    if saveFig
        outDir = fullfile('Results','CFII');
        if ~exist(outDir, 'dir')
            mkdir(outDir);
        end
        saveas(gcf, fullfile(outDir,'CFII1.png'));
    end
end

function vis = logical2OnOff(flag)
    if flag
        vis = 'on';
    else
        vis = 'off';
    end
end
